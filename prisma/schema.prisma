// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// Notes of Arkad is a personal finance and budgeting app

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id        String   @id @default(cuid())
  email     String?  @unique
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Profile Profile[]
}

model Profile {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  accountId String
  account   Account  @relation(fields: [accountId], references: [id])

  oneTimeBudget   OneTimeBudget[]
  recurringBudget RecurringBudget[]

  Expense Expense[]
}

model OneTimeBudget {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  profileId String
  profile   Profile  @relation(fields: [profileId], references: [id])

  OneTimeBudgetItem OneTimeBudgetItem[]
}

model OneTimeBudgetItem {
  id              String        @id @default(cuid())
  name            String
  amount          Float
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  oneTimeBudgetId String
  oneTimeBudget   OneTimeBudget @relation(fields: [oneTimeBudgetId], references: [id])

  OneTimeBudgetExpense OneTimeBudgetExpense[]
}

model OneTimeBudgetExpense {
  id                  String            @id @default(cuid())
  name                String
  amount              Float
  createdAt           DateTime          @default(now())
  updatedAt           DateTime          @updatedAt
  oneTimeBudgetItemId String
  oneTimeBudgetItem   OneTimeBudgetItem @relation(fields: [oneTimeBudgetItemId], references: [id])
}

enum RecurringPeriod {
  DAILY
  WEEKLY
  MONTHLY
  YEARLY
}

model RecurringBudget {
  id              String          @id @default(cuid())
  name            String
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  profileId       String
  profile         Profile         @relation(fields: [profileId], references: [id])
  recurringPeriod RecurringPeriod
  recurringAmount Float

  RecurringBudgetExpense RecurringBudgetExpense[]
}

model RecurringBudgetExpense {
  id                String          @id @default(cuid())
  name              String
  amount            Float
  date              DateTime
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
  recurringBudgetId String
  recurringBudget   RecurringBudget @relation(fields: [recurringBudgetId], references: [id])
}

model Expense {
  id        String   @id @default(cuid())
  name      String
  amount    Float
  date      DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  profileId String
  profile   Profile  @relation(fields: [profileId], references: [id])
}
